import sys
import sqlite3
from PySide6.QtWidgets import QApplication, QMainWindow, QTableWidget, QTableWidgetItem, QVBoxLayout, QPushButton, QWidget, QLabel, QComboBox, QMessageBox


class DatabaseViewer(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("–ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        self.setGeometry(200, 200, 800, 500)

        self.db_path = "base.db"  # üìå –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        self.conn = sqlite3.connect(self.db_path)
        self.cursor = self.conn.cursor()

        self.init_ui()

    def init_ui(self):
        layout = QVBoxLayout()

        # üìå –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:")
        layout.addWidget(self.label)

        # üìå –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏
        self.table_selector = QComboBox()
        self.table_selector.addItems(self.get_table_names())
        self.table_selector.currentTextChanged.connect(self.load_table_data)
        layout.addWidget(self.table_selector)

        # üìå –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        self.table_widget = QTableWidget()
        layout.addWidget(self.table_widget)

        # üìå –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        self.refresh_button = QPushButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å")
        self.refresh_button.clicked.connect(self.load_table_data)
        layout.addWidget(self.refresh_button)

        # üìå –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
        self.delete_button = QPushButton("‚ùå –£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É")
        self.delete_button.clicked.connect(self.delete_row)
        layout.addWidget(self.delete_button)

        # üìå –û—Å–Ω–æ–≤–Ω–æ–π –≤–∏–¥–∂–µ—Ç
        container = QWidget()
        container.setLayout(layout)
        self.setCentralWidget(container)

        self.load_table_data()

    def get_table_names(self):
        """ –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. """
        self.cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
        return [row[0] for row in self.cursor.fetchall()]

    def load_table_data(self):
        """ –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤ QTableWidget. """
        table_name = self.table_selector.currentText()
        if not table_name:
            return

        self.cursor.execute(f"PRAGMA table_info({table_name})")
        columns = [col[1] for col in self.cursor.fetchall()]  # üìå –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç–æ–ª–±—Ü–æ–≤

        self.cursor.execute(f"SELECT * FROM {table_name}")
        rows = self.cursor.fetchall()

        self.table_widget.setColumnCount(len(columns))
        self.table_widget.setRowCount(len(rows))
        self.table_widget.setHorizontalHeaderLabels(columns)

        for row_idx, row in enumerate(rows):
            for col_idx, cell in enumerate(row):
                self.table_widget.setItem(row_idx, col_idx, QTableWidgetItem(str(cell)))

    def delete_row(self):
        """ –£–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. """
        row = self.table_widget.currentRow()
        if row >= 0:
            table_name = self.table_selector.currentText()
            confirmation = QMessageBox.question(
                self, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É —Å—Ç—Ä–æ–∫—É –∏–∑ —Ç–∞–±–ª–∏—Ü—ã '{table_name}'?",
                QMessageBox.Yes | QMessageBox.No
            )

            if confirmation == QMessageBox.Yes:
                # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á (id) –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
                item = self.table_widget.item(row, 0)  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –ø–µ—Ä–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü - —ç—Ç–æ ID
                if item:
                    record_id = item.text()

                    # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    self.cursor.execute(f"DELETE FROM {table_name} WHERE id = ?", (record_id,))
                    self.conn.commit()

                    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
                    self.load_table_data()
        else:
            QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–æ–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")

    def closeEvent(self, event):
        """ –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. """
        self.conn.close()
        event.accept()


if __name__ == "__main__":
    app = QApplication(sys.argv)
    viewer = DatabaseViewer()
    viewer.show()
    sys.exit(app.exec())
